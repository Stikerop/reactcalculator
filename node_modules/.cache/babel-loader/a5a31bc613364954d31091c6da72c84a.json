{"ast":null,"code":"var _jsxFileName = \"/Users/Artem/projects/untitled2/src/App.js\";\nimport React from \"react\";\nimport './App.css';\nimport stor from \"./stor\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      out: '0'\n    };\n    this.refOutput = /*#__PURE__*/React.createRef();\n  }\n  tapeNumber(value) {\n    let currentValue = value;\n    let output = this.refOutput.current;\n    this.setState({\n      out: currentValue\n    });\n    if (output.value === '0') {\n      output.value = '';\n    }\n    output.value += currentValue;\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"output\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          ref: this.refOutput,\n          type: \"text\",\n          defaultValue: this.state.out\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: [stor.button.map(item => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            this.tapeNumber(item.val);\n          },\n          children: [\" \", item.val, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 46\n        }, this)), stor.operations.map(item => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            this.tapeOperation(item.val);\n          },\n          children: [\" \", item.val, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 50\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","stor","App","Component","constructor","state","out","refOutput","createRef","tapeNumber","value","currentValue","output","current","setState","render","button","map","item","val","operations","tapeOperation"],"sources":["/Users/Artem/projects/untitled2/src/App.js"],"sourcesContent":["import React from \"react\";\nimport './App.css'\nimport stor from \"./stor\";\n\nclass App extends React.Component {\n\n    constructor() {\n        super()\n        this.state = {\n            out: '0'\n        }\n        this.refOutput = React.createRef()\n    }\n\n    tapeNumber(value) {\n        let currentValue = value\n        let output = this.refOutput.current\n        this.setState({\n            out: currentValue\n        })\n        if (output.value === '0') {\n            output.value = ''\n        }\n        output.value += currentValue\n    }\n\n    tape\n\n    render() {\n        return (\n            <div className='container'>\n                <div className='output'>\n                    <input ref={this.refOutput} type=\"text\" defaultValue={this.state.out}/>\n                </div>\n                <div className=\"buttons\">\n                    {stor.button.map(item => <button\n                        onClick={() => {\n                            this.tapeNumber(item.val)\n                        }}\n                    > {item.val} </button>)}\n                    {stor.operations.map(item => <button\n                        onClick={() => {\n                            this.tapeOperation(item.val)\n                        }}\n                    > {item.val} </button>)}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default App"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,WAAW;AAClB,OAAOC,IAAI,MAAM,QAAQ;AAAC;AAE1B,MAAMC,GAAG,SAASF,KAAK,CAACG,SAAS,CAAC;EAE9BC,WAAW,GAAG;IACV,KAAK,EAAE;IACP,IAAI,CAACC,KAAK,GAAG;MACTC,GAAG,EAAE;IACT,CAAC;IACD,IAAI,CAACC,SAAS,gBAAGP,KAAK,CAACQ,SAAS,EAAE;EACtC;EAEAC,UAAU,CAACC,KAAK,EAAE;IACd,IAAIC,YAAY,GAAGD,KAAK;IACxB,IAAIE,MAAM,GAAG,IAAI,CAACL,SAAS,CAACM,OAAO;IACnC,IAAI,CAACC,QAAQ,CAAC;MACVR,GAAG,EAAEK;IACT,CAAC,CAAC;IACF,IAAIC,MAAM,CAACF,KAAK,KAAK,GAAG,EAAE;MACtBE,MAAM,CAACF,KAAK,GAAG,EAAE;IACrB;IACAE,MAAM,CAACF,KAAK,IAAIC,YAAY;EAChC;EAIAI,MAAM,GAAG;IACL,oBACI;MAAK,SAAS,EAAC,WAAW;MAAA,wBACtB;QAAK,SAAS,EAAC,QAAQ;QAAA,uBACnB;UAAO,GAAG,EAAE,IAAI,CAACR,SAAU;UAAC,IAAI,EAAC,MAAM;UAAC,YAAY,EAAE,IAAI,CAACF,KAAK,CAACC;QAAI;UAAA;UAAA;UAAA;QAAA;MAAE;QAAA;QAAA;QAAA;MAAA,QACrE,eACN;QAAK,SAAS,EAAC,SAAS;QAAA,WACnBL,IAAI,CAACe,MAAM,CAACC,GAAG,CAACC,IAAI,iBAAI;UACrB,OAAO,EAAE,MAAM;YACX,IAAI,CAACT,UAAU,CAACS,IAAI,CAACC,GAAG,CAAC;UAC7B,CAAE;UAAA,gBACHD,IAAI,CAACC,GAAG;QAAA;UAAA;UAAA;UAAA;QAAA,QAAW,CAAC,EACtBlB,IAAI,CAACmB,UAAU,CAACH,GAAG,CAACC,IAAI,iBAAI;UACzB,OAAO,EAAE,MAAM;YACX,IAAI,CAACG,aAAa,CAACH,IAAI,CAACC,GAAG,CAAC;UAChC,CAAE;UAAA,gBACHD,IAAI,CAACC,GAAG;QAAA;UAAA;UAAA;UAAA;QAAA,QAAW,CAAC;MAAA;QAAA;QAAA;QAAA;MAAA,QACrB;IAAA;MAAA;MAAA;MAAA;IAAA,QACJ;EAEd;AACJ;AAEA,eAAejB,GAAG"},"metadata":{},"sourceType":"module"}